{"remainingRequest":"/home/eric/Workspace/edustreamx/node_modules/thread-loader/dist/cjs.js!/home/eric/Workspace/edustreamx/node_modules/babel-loader/lib/index.js!/home/eric/Workspace/edustreamx/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/eric/Workspace/edustreamx/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eric/Workspace/edustreamx/src/components/SplashForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eric/Workspace/edustreamx/src/components/SplashForm.vue","mtime":1554790351510},{"path":"/home/eric/Workspace/edustreamx/node_modules/cache-loader/dist/cjs.js","mtime":1554753029931},{"path":"/home/eric/Workspace/edustreamx/node_modules/thread-loader/dist/cjs.js","mtime":1554753030639},{"path":"/home/eric/Workspace/edustreamx/node_modules/babel-loader/lib/index.js","mtime":1554753029823},{"path":"/home/eric/Workspace/edustreamx/node_modules/cache-loader/dist/cjs.js","mtime":1554753029931},{"path":"/home/eric/Workspace/edustreamx/node_modules/vue-loader/lib/index.js","mtime":1554753030671}],"contextDependencies":[],"result":["import _JSON$stringify from \"/home/eric/Workspace/edustreamx/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport { TeacherNode, RTCNode } from '../rtc.js';\nimport '../jquery-3.3.1.min.js'; // tab numbers\n\nvar TEACHER = 1;\nvar STUDENT = 2; // roomID used for joining\n// roomName used for creating\n\nfunction postData() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\",\n    // no-referrer, *client\n    body: _JSON$stringify(data) // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.json();\n  }) // parses JSON response into native Javascript objects \n  .catch(function (err) {\n    return console.log(\"error with response from fetch\", err);\n  });\n}\n\nexport default {\n  name: 'SplashForm',\n  data: function data() {\n    return {\n      roomName: \"\",\n      roomID: \"\",\n      roomCreated: false,\n      room_url: \"\",\n      activeTab: 1,\n      error: \"\",\n      username: \"\"\n    };\n  },\n  methods: {\n    createRoom: function createRoom() {\n      var _this = this;\n\n      postData(\"/queryRoom\", {\n        roomName: this.roomName\n      }).then(function (respObj) {\n        if (respObj.hasRoom) {\n          _this.error = \"Room name taken\";\n        } else {\n          _this.$emit('clientType', 'teacher');\n\n          _this.$emit('roomName', _this.roomName);\n\n          _this.$emit(\"username\", _this.username);\n        }\n      }).catch(function (err) {\n        return console.log(\"fetch error handling failed\", err);\n      });\n      /* TESTING\n        this.$emit('clientType', 'teacher');\n        this.$emit('roomName', this.roomName);\n        this.$emit(\"username\", this.username);*/\n    },\n    joinRoom: function joinRoom() {\n      var _this2 = this;\n\n      postData(\"/queryRoom\", {\n        roomName: this.roomName\n      }).then(function (respObj) {\n        if (!respObj.hasRoom) {\n          _this2.error = \"Room '\".concat(_this2.roomName, \"' does not exist.\");\n        } else {\n          _this2.$emit('clientType', 'student');\n\n          _this2.$emit('roomName', _this2.roomName);\n\n          _this2.$emit(\"username\", _this2.username);\n        }\n      }).catch(function (err) {\n        return console.log(\"fetch error handling failed\", err);\n      });\n      /*\n          this.$emit('clientType', 'student');\n          this.$emit('roomID', this.roomID);\n          this.$emit(\"username\", this.username);*/\n    }\n  },\n  props: {}\n};",{"version":3,"sources":["SplashForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mainblock\">\n  <div v-if=\"error !== ''\" id=\"gotoRoom\">\n  <h3>Error: {{error}}</h3>\n  <b-button v-on:click=\"error=''\">Go Back</b-button>\n  </div>\n  <span class=\"formdiv\" v-else>\n  <div class=\"header\">\n  <b-nav pills>\n  <b-nav-item v-on:click=\"activeTab=1\" v-bind:active=\"activeTab === 1\">Teacher</b-nav-item>\n  <b-nav-item v-on:click=\"activeTab=2\" v-bind:active=\"activeTab === 2\">Student</b-nav-item>\n  </b-nav>\n  </div>\n  <form v-if=\"activeTab === 1\" id=\"createRoom\">\n  <b-form-input id=\"roomName\" v-model=\"roomName\" placeholder=\"Classroom Name\"></b-form-input>\n  <b-button v-on:click=\"createRoom\" id=\"submit\">Create Classroom!</b-button>\n  </form>\n  <form v-else id=\"joinRoom\">\n    <b-form-input id=\"roomID\" v-model=\"roomName\" placeholder=\"Classroom ID\"></b-form-input>\n    <b-form-input id=\"username\" v-model=\"username\" placeholder=\"Username\"></b-form-input>\n    <b-button v-on:click=\"joinRoom\" id=\"submit\">Join Room</b-button>\n  </form>\n  </span>\n  </div>\n  </template>\n<style scoped>\n.formdiv {\n  display: inline-block;\n  min-width:300px;\n}\ninput {\n  margin: 10px;\n}\n.mainblock {\n  padding-top:10%;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n</style>\n\n<script>\n/* eslint-disable */\nimport { TeacherNode, RTCNode }  from '../rtc.js'\nimport '../jquery-3.3.1.min.js'\n\n// tab numbers\nconst TEACHER = 1;\nconst STUDENT = 2;\n\n// roomID used for joining\n// roomName used for creating\n\nfunction postData(url = ``, data = {}) {\n  // Default options are marked with *\n    return fetch(url, {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"Content-Type\": \"application/json\",\n            // \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n    .then(response => response.json()) // parses JSON response into native Javascript objects \n    .catch(err => console.log(\"error with response from fetch\", err));\n} \n\nexport default {\n  name: 'SplashForm',\n  data: function()  {\n    return { \n      roomName: \"\",\n      roomID: \"\",\n      roomCreated: false,\n      room_url: \"\",\n      activeTab : 1 ,\n      error: \"\",\n      username: \"\",\n      };\n  },\n  methods: {\n    createRoom: function() {\n      postData(\"/queryRoom\", { roomName: this.roomName})\n        .then(respObj => {\n          if (respObj.hasRoom) {\n            this.error = \"Room name taken\";\n          }\n          else {\n            this.$emit('clientType', 'teacher');\n            this.$emit('roomName', this.roomName);\n            this.$emit(\"username\", this.username);\n          }\n        })\n        .catch(err => console.log(\"fetch error handling failed\", err));\n        /* TESTING\n          this.$emit('clientType', 'teacher');\n          this.$emit('roomName', this.roomName);\n          this.$emit(\"username\", this.username);*/\n    },\n    joinRoom: function() {\n      postData(\"/queryRoom\", { roomName: this.roomName})\n        .then(respObj => {\n          if (! respObj.hasRoom) {\n            this.error = `Room '${this.roomName}' does not exist.`;\n          }\n          else {\n            this.$emit('clientType', 'student');\n            this.$emit('roomName', this.roomName);\n            this.$emit(\"username\", this.username);\n          }\n        })\n        .catch(err => console.log(\"fetch error handling failed\", err));\n        /*\n            this.$emit('clientType', 'student');\n            this.$emit('roomID', this.roomID);\n            this.$emit(\"username\", this.username);*/\n    }\n  },\n  props: {\n  }\n}\n</script>"],"sourceRoot":"src/components"}]}