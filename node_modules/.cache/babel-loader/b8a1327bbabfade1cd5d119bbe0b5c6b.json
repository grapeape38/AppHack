{"remainingRequest":"/home/daniel/edustreamx/node_modules/thread-loader/dist/cjs.js!/home/daniel/edustreamx/node_modules/babel-loader/lib/index.js!/home/daniel/edustreamx/node_modules/eslint-loader/index.js??ref--13-0!/home/daniel/edustreamx/src/canvas.js","dependencies":[{"path":"/home/daniel/edustreamx/src/canvas.js","mtime":1554568208663},{"path":"/home/daniel/edustreamx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/edustreamx/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/edustreamx/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/daniel/edustreamx/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport _classCallCheck from \"/home/daniel/edustreamx/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/edustreamx/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar CanvasDraw =\n/*#__PURE__*/\nfunction () {\n  function CanvasDraw(canvas) {\n    var _this = this;\n\n    _classCallCheck(this, CanvasDraw);\n\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.color = \"black\";\n    this.pensize = 5;\n    var width = 800;\n    var height = 500;\n    canvas.width = width;\n    canvas.height = height;\n    this.pts = [];\n    var ps = 5;\n\n    this.canvas.onmousedown = function (e) {\n      return _this.pen = true;\n    };\n\n    this.canvas.onmouseup = function (e) {\n      _this.pen = false;\n      _this.pts[_this.pts.length - 1].end = true;\n    };\n\n    this.canvas.onmousemove = function (e) {\n      if (_this.pen) _this.pts.push({\n        x: e.offsetX,\n        y: e.offsetY,\n        color: _this.color,\n        pensize: _this.pensize\n      });\n\n      _this.repaint();\n    };\n\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n    this.ctx.fill();\n  }\n\n  _createClass(CanvasDraw, [{\n    key: \"main\",\n    value: function main() {\n      var _this2 = this;\n\n      requestAnimationFrame(function () {\n        return _this2.main();\n      }); //this.repaint();\n    }\n  }, {\n    key: \"setFGColor\",\n    value: function setFGColor(color) {\n      this.color = color;\n    }\n  }, {\n    key: \"setPenSize\",\n    value: function setPenSize(size) {\n      this.pensize = size;\n    }\n  }, {\n    key: \"clearCanvas\",\n    value: function clearCanvas() {\n      this.ctx.fillStyle = 'white';\n      this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n      this.ctx.fill();\n      this.pts = [];\n    }\n  }, {\n    key: \"repaint\",\n    value: function repaint() {\n      if (this.pts.length == 0) return;\n      this.ctx.strokeStyle = this.pts[0].color;\n      this.ctx.lineWidth = this.pts[0].pensize;\n      this.ctx.beginPath();\n\n      for (var i = 1; i < this.pts.length; i++) {\n        var prev = this.pts[i - 1];\n        var curr = this.pts[i];\n        this.ctx.strokeStyle = prev.color;\n        this.ctx.lineWidth = prev.pensize;\n\n        if (prev.end || prev.color != curr.color || prev.pensize != curr.pensize) {\n          this.ctx.stroke();\n          this.ctx.beginPath();\n        } else {\n          this.ctx.moveTo(prev.x, prev.y);\n          this.ctx.lineTo(curr.x, curr.y);\n        }\n      }\n\n      this.ctx.stroke();\n    }\n  }]);\n\n  return CanvasDraw;\n}();\n\nexport default CanvasDraw;",{"version":3,"sources":["/home/daniel/edustreamx/src/canvas.js"],"names":["CanvasDraw","canvas","ctx","getContext","color","pensize","width","height","pts","ps","onmousedown","e","pen","onmouseup","length","end","onmousemove","push","x","offsetX","y","offsetY","repaint","fillStyle","fillRect","fill","requestAnimationFrame","main","size","strokeStyle","lineWidth","beginPath","i","prev","curr","stroke","moveTo","lineTo"],"mappings":"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","sourcesContent":["class CanvasDraw {\n    constructor(canvas) {\n        this.canvas = canvas\n        this.ctx = canvas.getContext('2d')\n        this.color = \"black\"\n        this.pensize = 5\n\n        const width = 800;\n        const height = 500;\n        canvas.width = width; \n        canvas.height = height;\n        this.pts = []\n        var ps = 5\n\n        this.canvas.onmousedown = (e) => this.pen = true;\n        this.canvas.onmouseup = (e) => {\n            this.pen = false;\n            this.pts[this.pts.length - 1].end = true;\n        }\n        this.canvas.onmousemove = (e) => {\n            if (this.pen) this.pts.push({ x : e.offsetX, y : e.offsetY, color: this.color, pensize: this.pensize});\n            this.repaint();\n        }\n\n        this.ctx.fillStyle =  'white'\n        this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this.ctx.fill()\n\n    }\n\n    main() {\n       requestAnimationFrame(() => this.main());\n       //this.repaint();\n    }\n\n    setFGColor(color) {\n        this.color = color\n    }\n\n    setPenSize(size) {\n      this.pensize = size\n    }\n\n    clearCanvas() {\n        this.ctx.fillStyle =  'white'\n        this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this.ctx.fill()\n        this.pts = []\n    }\n    \n    repaint() {\n      if (this.pts.length == 0)\n        return;\n      this.ctx.strokeStyle = this.pts[0].color\n      this.ctx.lineWidth = this.pts[0].pensize\n      this.ctx.beginPath()\n      for (var i = 1; i < this.pts.length; i++) {\n        var prev = this.pts[i-1];\n        var curr = this.pts[i];\n        this.ctx.strokeStyle = prev.color;\n        this.ctx.lineWidth = prev.pensize;\n        if (prev.end || prev.color != curr.color || prev.pensize != curr.pensize) {\n          this.ctx.stroke();\n          this.ctx.beginPath();\n        }\n        else {\n          this.ctx.moveTo(prev.x, prev.y);\n          this.ctx.lineTo(curr.x, curr.y);\n        }\n      }\n      this.ctx.stroke();\n    }\n}\n\nexport default CanvasDraw"]}]}