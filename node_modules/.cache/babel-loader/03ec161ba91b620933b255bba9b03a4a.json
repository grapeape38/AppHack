{"remainingRequest":"/home/eric/Workspace/edustreamx/node_modules/babel-loader/lib/index.js!/home/eric/Workspace/edustreamx/node_modules/eslint-loader/index.js??ref--13-0!/home/eric/Workspace/edustreamx/src/client-socket.js","dependencies":[{"path":"/home/eric/Workspace/edustreamx/src/client-socket.js","mtime":1554753030751},{"path":"/home/eric/Workspace/edustreamx/node_modules/cache-loader/dist/cjs.js","mtime":1554753029931},{"path":"/home/eric/Workspace/edustreamx/node_modules/babel-loader/lib/index.js","mtime":1554753029823},{"path":"/home/eric/Workspace/edustreamx/node_modules/eslint-loader/index.js","mtime":1554753030083}],"contextDependencies":[],"result":["import _JSON$stringify from \"/home/eric/Workspace/edustreamx/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"/home/eric/Workspace/edustreamx/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"/home/eric/Workspace/edustreamx/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eric/Workspace/edustreamx/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\n/* eslint-disable */\nvar WS_OPEN = 1;\n\nvar ClientSocket =\n/*#__PURE__*/\nfunction () {\n  function ClientSocket(rtcNode) {\n    _classCallCheck(this, ClientSocket);\n\n    this.ws = this.initWS();\n    this.rtcNode = rtcNode;\n    this.wsConnected = false;\n  }\n\n  _createClass(ClientSocket, [{\n    key: \"initWS\",\n    value: function initWS() {\n      var _this = this;\n\n      var ws = new WebSocket(\"ws://edustreamx.herokuapp.com:\" + location.port);\n\n      ws.onmessage = function (event) {\n        _this.processServerMessage(event.data);\n      };\n\n      ws.onopen = function (event) {\n        console.log(\"WS open\");\n        _this.wsConnected = true;\n      };\n\n      ws.onclose = function () {\n        return console.log(\"WS closed\");\n      };\n\n      ws.onerror = function (err) {\n        return console.log(\"WS error:\", err);\n      };\n\n      return ws;\n    }\n  }, {\n    key: \"checkWS\",\n    value: function checkWS() {\n      var _this2 = this;\n\n      var checks = 0;\n      return new _Promise(function (resolve, reject) {\n        var query = setInterval(function () {\n          if (_this2.wsConnected) {\n            clearInterval(query);\n            resolve();\n          }\n\n          if (checks++ > 10) reject();\n        }, 1000);\n      });\n    }\n  }, {\n    key: \"processServerMessage\",\n    value: function processServerMessage(msg) {\n      msg = JSON.parse(msg);\n\n      switch (msg.type) {\n        case \"assignID\":\n          this.rtcNode.clientID = msg.clientID;\n          break;\n\n        case \"childAnswer\":\n          this.rtcNode.outgoingRTC.get(msg.cid).signal(msg.answer);\n          break;\n\n        case \"initiateConnection\":\n          this.rtcNode.createSourceRTC(msg.cid);\n          break;\n\n        case \"parentOffer\":\n          console.log(\"got parent offer\");\n          this.rtcNode.incomingRTC = this.rtcNode.createReceiverRTC(msg.offer);\n          this.rtcNode.parentID = msg.pid;\n          break;\n\n        case \"breakWithParent\":\n          this.rtcNode.destroyIncoming();\n          break;\n\n        case \"breakWithChild\":\n          this.rtcNode.destroyOutgoing(msg.cid);\n          break;\n\n        case \"classroomClosed\":\n          this.rtcNode.destroyIncoming();\n          alert(\"Classroom has been closed\");\n          break;\n\n        case \"addChat\":\n          if (this.receiveChat == undefined) throw \"Chat is uninitialized for this socket\";\n          this.receiveChat(msg.text, msg.username);\n          break;\n\n        case \"requestBroadcast\":\n          this.setReqActive(true);\n          break;\n\n        case \"serverError\":\n          console.log(\"server error: \", msg.error);\n          break;\n\n        default:\n          throw \"Unknown message type: \" + msg.type;\n      }\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(msgobj) {\n      if (msgobj.type == undefined) throw \"Cannot send message with undefined type\";\n\n      if (this.ws.readyState == WS_OPEN) {\n        this.ws.send(_JSON$stringify(msgobj));\n        console.log(\"sending message to server\");\n      } else throw \"WS error sending message to server: readyState = \" + this.ws.readyState;\n    }\n  }]);\n\n  return ClientSocket;\n}();\n\nexport { ClientSocket };",{"version":3,"sources":["/home/eric/Workspace/edustreamx/src/client-socket.js"],"names":["WS_OPEN","ClientSocket","rtcNode","ws","initWS","wsConnected","WebSocket","location","port","onmessage","event","processServerMessage","data","onopen","console","log","onclose","onerror","err","checks","resolve","reject","query","setInterval","clearInterval","msg","JSON","parse","type","clientID","outgoingRTC","get","cid","signal","answer","createSourceRTC","incomingRTC","createReceiverRTC","offer","parentID","pid","destroyIncoming","destroyOutgoing","alert","receiveChat","undefined","text","username","setReqActive","error","msgobj","readyState","send"],"mappings":";;;;;AAAA;AACA,IAAMA,OAAO,GAAG,CAAhB;;IAEMC,Y;;;AACJ,wBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,EAAL,GAAU,KAAKC,MAAL,EAAV;AACA,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKG,WAAL,GAAmB,KAAnB;AACD;;;;6BAEQ;AAAA;;AACP,UAAIF,EAAE,GAAG,IAAIG,SAAJ,CAAc,mCAAmCC,QAAQ,CAACC,IAA1D,CAAT;;AACAL,MAAAA,EAAE,CAACM,SAAH,GAAe,UAACC,KAAD,EAAW;AACxB,QAAA,KAAI,CAACC,oBAAL,CAA0BD,KAAK,CAACE,IAAhC;AACD,OAFD;;AAGAT,MAAAA,EAAE,CAACU,MAAH,GAAY,UAACH,KAAD,EAAW;AACrBI,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAA,KAAI,CAACV,WAAL,GAAmB,IAAnB;AACD,OAHD;;AAIAF,MAAAA,EAAE,CAACa,OAAH,GAAa;AAAA,eAAMF,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AAAA,OAAb;;AACAZ,MAAAA,EAAE,CAACc,OAAH,GAAa,UAACC,GAAD;AAAA,eAASJ,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,GAAzB,CAAT;AAAA,OAAb;;AACA,aAAOf,EAAP;AACD;;;8BAES;AAAA;;AACR,UAAIgB,MAAM,GAAG,CAAb;AACA,aAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC5B,cAAI,MAAI,CAAClB,WAAT,EAAsB;AACpBmB,YAAAA,aAAa,CAACF,KAAD,CAAb;AACAF,YAAAA,OAAO;AACR;;AACD,cAAID,MAAM,KAAK,EAAf,EAAmBE,MAAM;AAC1B,SANsB,EAMpB,IANoB,CAAvB;AAOD,OARM,CAAP;AASD;;;yCAEoBI,G,EAAK;AACxBA,MAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAN;;AACA,cAAQA,GAAG,CAACG,IAAZ;AACE,aAAK,UAAL;AACE,eAAK1B,OAAL,CAAa2B,QAAb,GAAwBJ,GAAG,CAACI,QAA5B;AACA;;AACF,aAAK,aAAL;AACE,eAAK3B,OAAL,CAAa4B,WAAb,CAAyBC,GAAzB,CAA6BN,GAAG,CAACO,GAAjC,EAAsCC,MAAtC,CAA6CR,GAAG,CAACS,MAAjD;AACA;;AACF,aAAK,oBAAL;AACE,eAAKhC,OAAL,CAAaiC,eAAb,CAA6BV,GAAG,CAACO,GAAjC;AACA;;AACF,aAAK,aAAL;AACElB,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,eAAKb,OAAL,CAAakC,WAAb,GAA2B,KAAKlC,OAAL,CAAamC,iBAAb,CAA+BZ,GAAG,CAACa,KAAnC,CAA3B;AACA,eAAKpC,OAAL,CAAaqC,QAAb,GAAwBd,GAAG,CAACe,GAA5B;AACA;;AACF,aAAK,iBAAL;AACE,eAAKtC,OAAL,CAAauC,eAAb;AACA;;AACF,aAAK,gBAAL;AACE,eAAKvC,OAAL,CAAawC,eAAb,CAA6BjB,GAAG,CAACO,GAAjC;AACA;;AACF,aAAK,iBAAL;AACE,eAAK9B,OAAL,CAAauC,eAAb;AACAE,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;;AACF,aAAK,SAAL;AACE,cAAI,KAAKC,WAAL,IAAoBC,SAAxB,EAAmC,MAAM,uCAAN;AACnC,eAAKD,WAAL,CAAiBnB,GAAG,CAACqB,IAArB,EAA2BrB,GAAG,CAACsB,QAA/B;AACA;;AACF,aAAK,kBAAL;AACE,eAAKC,YAAL,CAAkB,IAAlB;AACA;;AACF,aAAK,aAAL;AACElC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BU,GAAG,CAACwB,KAAlC;AACA;;AACF;AAAS,gBAAM,2BAA2BxB,GAAG,CAACG,IAArC;AAnCX;AAqCD;;;gCAEWsB,M,EAAQ;AAClB,UAAIA,MAAM,CAACtB,IAAP,IAAeiB,SAAnB,EAA8B,MAAM,yCAAN;;AAC9B,UAAI,KAAK1C,EAAL,CAAQgD,UAAR,IAAsBnD,OAA1B,EAAmC;AACjC,aAAKG,EAAL,CAAQiD,IAAR,CAAa,gBAAeF,MAAf,CAAb;AACApC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,OAHD,MAKE,MAAM,sDAAsD,KAAKZ,EAAL,CAAQgD,UAApE;AACH;;;;;;AAIH,SACElD,YADF","sourcesContent":["/* eslint-disable */\nconst WS_OPEN = 1;\n\nclass ClientSocket {\n  constructor(rtcNode) {\n    this.ws = this.initWS();\n    this.rtcNode = rtcNode;\n    this.wsConnected = false;\n  }\n\n  initWS() {\n    var ws = new WebSocket(\"ws://edustreamx.herokuapp.com:\" + location.port);\n    ws.onmessage = (event) => {\n      this.processServerMessage(event.data);\n    };\n    ws.onopen = (event) => { \n      console.log(\"WS open\");\n      this.wsConnected = true;\n    };\n    ws.onclose = () => console.log(\"WS closed\");\n    ws.onerror = (err) => console.log(\"WS error:\", err);\n    return ws;\n  }\n\n  checkWS() {\n    var checks = 0;\n    return new Promise((resolve, reject) => {\n      var query = setInterval(() => {\n        if (this.wsConnected) {\n          clearInterval(query);\n          resolve();\n        }\n        if (checks++ > 10) reject(); \n      }, 1000);\n    });\n  }\n\n  processServerMessage(msg) {\n    msg = JSON.parse(msg);\n    switch (msg.type) {\n      case \"assignID\": \n        this.rtcNode.clientID = msg.clientID;\n        break;\n      case \"childAnswer\":\n        this.rtcNode.outgoingRTC.get(msg.cid).signal(msg.answer);         \n        break;\n      case \"initiateConnection\":\n        this.rtcNode.createSourceRTC(msg.cid);\n        break;\n      case \"parentOffer\": \n        console.log(\"got parent offer\");\n        this.rtcNode.incomingRTC = this.rtcNode.createReceiverRTC(msg.offer);\n        this.rtcNode.parentID = msg.pid;\n        break;\n      case \"breakWithParent\":\n        this.rtcNode.destroyIncoming();\n        break;\n      case \"breakWithChild\":\n        this.rtcNode.destroyOutgoing(msg.cid);\n        break; \n      case \"classroomClosed\":\n        this.rtcNode.destroyIncoming();\n        alert(\"Classroom has been closed\");\n        break;\n      case \"addChat\":\n        if (this.receiveChat == undefined) throw \"Chat is uninitialized for this socket\";\n        this.receiveChat(msg.text, msg.username);\n        break;\n      case \"requestBroadcast\": \n        this.setReqActive(true);\n        break;\n      case \"serverError\": \n        console.log(\"server error: \", msg.error);\n        break;\n      default: throw \"Unknown message type: \" + msg.type;\n    }\n  }\n\n  sendMessage(msgobj) {\n    if (msgobj.type == undefined) throw \"Cannot send message with undefined type\";\n    if (this.ws.readyState == WS_OPEN) {\n      this.ws.send(JSON.stringify(msgobj));\n      console.log(\"sending message to server\");\n    }\n    else\n      throw \"WS error sending message to server: readyState = \" + this.ws.readyState;\n  }\n}\n\n\nexport {\n  ClientSocket as ClientSocket,\n};\n"]}]}