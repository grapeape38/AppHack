{"remainingRequest":"/home/daniel/edustreamx/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/edustreamx/src/components/ChatBox.vue?vue&type=style&index=0&id=1cff0d44&scoped=true&lang=css&","dependencies":[{"path":"/home/daniel/edustreamx/src/components/ChatBox.vue","mtime":1554568208659},{"path":"/home/daniel/edustreamx/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/daniel/edustreamx/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/daniel/edustreamx/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/daniel/edustreamx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/edustreamx/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#chatbox {\n    position: absolute;\n    margin: 0 auto 0 auto;\n    width: 40%;\n    left: 60%;\n}\nform, button {\n    margin-top: 15px\n}\n#chatdisplay {\n    min-height: 200px;\n    max-height: 200px;\n    overflow-y: scroll;\n    list-style-type: none;\n}\n",{"version":3,"sources":["ChatBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"chatbox\">\n    <b-list-group id=\"chatdisplay\">\n        <ChatMessage\n            v-for=\"msg in chatMessages\"\n            v-bind:key=\"msg.id\"\n            v-bind:message=\"msg.username + ': ' + msg.message\"\n            v-bind:question=\"msg.question\"\n        ></ChatMessage>\n    </b-list-group>\n    <form v-on:submit=\"addChat\" id=\"msg_form\">\n        <b-form-input id=\"msg_input\" v-model=\"chat\" placeholder=\"type your message\"></b-form-input>\n        <b-button v-on:click=\"addChat\" id=\"msg_button\">Post Message</b-button>\n    </form>\n</div>\n</template>\n\n<script>\n//this.history.scrollTop = this.history.scrollHeight\nimport ChatMessage from './ChatMessage'\nexport default {\n    name: \"ChatBox\",\n    data: function() {\n        return {\n            chatMessages: [],\n            cur_id: 0,\n            chat: \"\"\n        }\n    },\n    props: [\"socket\", \"username\"],\n    watch: {\n      socket(newval, oldval) {\n        this.socket = newval;\n        this.socket.receiveChat = this.receiveChat;\n      }\n    },\n    components: {\n        ChatMessage\n    },\n    methods: {\n        addChat() {\n          this.socket.sendMessage({\n            type: \"userChat\",\n            text: this.chat,\n            username: this.username,\n          })\n        },\n        receiveChat(text, username) { // (from server)\n            var msg_obj = {\n                username: username,\n                message: text,\n                question: text.substr(-1) === '?',\n                id: this.cur_id++ \n            }\n            this.chatMessages.push(msg_obj);\n            var chatdisplay = document.getElementById(\"chatdisplay\");\n            chatdisplay.scrollTop = chatdisplay.scrollHeight;\n        }\n    }\n}\n</script>\n\n<style scoped>\n    #chatbox {\n        position: absolute;\n        margin: 0 auto 0 auto;\n        width: 40%;\n        left: 60%;\n    }\n    form, button {\n        margin-top: 15px\n    }\n    #chatdisplay {\n        min-height: 200px;\n        max-height: 200px;\n        overflow-y: scroll;\n        list-style-type: none;\n    }\n</style>\n"]}]}