<template>
    <div>
        <h1>Welcome to the Classroom</h1>
        <div id="main">
            <Canvas v-bind:broadcasting="broadcasting"
                    clientType="clientType" :canvasCallback="canvasCallback"></Canvas>
            <ChatBox :socket="socket" :username="username"></ChatBox>
            <button v-on:click="requestBroadcast" >Request broadcast</button>
        </div>
    </div>
</template>

<script>
import { TeacherNode, RTCNode }  from '../rtc.js'
import Canvas from './Canvas'
import ChatBox from './ChatBox'
export default {
    name: "Classroom",
    props: ["clientType", "canvas", "roomID", "roomName", "username"],
    data: function() {
        return { 
          broadcasting: false,
          socket: null,
        };
    },
    components: {
        Canvas,
        ChatBox
    },
    created: function() {
        this.broadcasting = this.clientType === 'teacher'
        console.log("class usern = ", this.username);
    },
    methods: {
        canvasCallback(c, v) {
            canvas = c
            video = v
            console.log("created room for type: ", this.clientType, canvas, video);
            if (this.clientType === "teacher") {
              this.rtc = new TeacherNode(canvas, video);
              this.socket = this.rtc.socket;
              this.rtc.socket.checkWS().then(() => {
                this.rtc.socket.sendMessage({ type: "createRoom", roomName: this.roomName });
                console.log("sent create room req", this.roomName);
              })
              .catch(err => console.log("Unable to create classroom -- ws uninitialized", err));
            }
            else if (this.clientType === "student") {
              this.rtc = new RTCNode(video);
              this.socket = this.rtc.socket;
              this.rtc.socket.checkWS().then(() => {
                this.rtc.socket.sendMessage({ 
                  type: "joinRoom",
                  roomName: this.roomID,
                })
              })
              .catch(err => console.log("Unable to join classroom -- ", err));
            }
            else {
              throw "Unknown client type: " + this.clientType;
            }
          },
    }
}
</script>